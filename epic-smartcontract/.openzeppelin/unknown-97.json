{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x014Ab2B8D891a81d69EA726B2767869843298f2E",
    "txHash": "0x4428970436e7d9b603354f1d82c8012e9cbc870a1a7c0e6a191ceabe8615214a",
    "deployTransaction": {
      "hash": "0x4428970436e7d9b603354f1d82c8012e9cbc870a1a7c0e6a191ceabe8615214a",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xE40845297c6693863Ab3E10560C97AACb32cbc6C",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x2e90edd000"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1069,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xbc71fc1c13cd24109736f1fa5cf0eaa7ad8e242a87e7b2ab9abca8061297b6a7",
      "s": "0x4b09f0f1233f301953c6c1128cb14940773c0bfa52a14797740270afdc8e85c4",
      "v": 229,
      "creates": "0x014Ab2B8D891a81d69EA726B2767869843298f2E",
      "chainId": 97
    }
  },
  "proxies": [
    {
      "address": "0xf021ADb740581c8A8Bcb08603A4b05a453dc8eEf",
      "txHash": "0x70ab1608f382f9ed1417e9babe9ab1e820da37fe1072c27024011fae0a87074e",
      "kind": "transparent"
    },
    {
      "address": "0xEb1674bA6cea59677ccdb1915BFc5348fAFE34dB",
      "txHash": "0x8a63e36413b36e79f6b7a3d952a2fc35629b69183de4ffec57e975b50bc39016",
      "kind": "transparent"
    },
    {
      "address": "0xEF4a6E79145B545C2b350A7D567ea466aa8Ae9Ff",
      "txHash": "0x83afaae8cc7923564517d9de8735db558cb936d2d3f2d62402183e51bcd746a1",
      "kind": "transparent"
    },
    {
      "address": "0xA8359e8f162c741D3C5e7Cf8d497735418b6DFBD",
      "txHash": "0x3d44d3bf24712ee46f36a82ba9d09d2d06427172a1074d09c707fd036e1e4393",
      "kind": "transparent"
    },
    {
      "address": "0xA79126F4FaB18Dd6F045CD297496FcCba0127056",
      "txHash": "0x4c4f45a3702eecc4bca04568201712183a02788147f2e76f05c22265fd05bd05",
      "kind": "transparent"
    },
    {
      "address": "0x093465d624A8D845532D22FFaf913094b0f6d3c1",
      "txHash": "0x9d59857d0893cdd2e7c3a308aa901f9f2d041dadaaf7f51f6f088b8875af449e",
      "kind": "transparent"
    },
    {
      "address": "0xDaf8c533Ab18b44838C12e579f300Ca1c45Cb5bb",
      "txHash": "0x3f0a4a10592d7ef7df697ee6f7e57d7f205896611aaefd78cf2e4ae61e4e7df4",
      "kind": "transparent"
    },
    {
      "address": "0x7B2a911fD8b1dE22F06655495A6b200Ac841298B",
      "txHash": "0x208aec7439fcfe5e92ff96395ff0dd71dacb8a47d93bf0e7a4e142ae556a75f4",
      "kind": "transparent"
    },
    {
      "address": "0xa97b11cE1A67BF80b49EE2a221d64af7B0B4c185",
      "txHash": "0x568d3596d7546230a6382004d5792e907f09c303d9bd1e8fd4b5bab4a4a6587e",
      "kind": "transparent"
    },
    {
      "address": "0x7f3e959f8FeAD0c992826ddf10D1a840f0d6d6A1",
      "txHash": "0xaa1d63ddb86fb5c9aa6aeeece5f256a5bd471650880247d0f5a278c9796b29e8",
      "kind": "transparent"
    },
    {
      "address": "0xdf2f6E7460063823e1883C25970343a26ce565A1",
      "txHash": "0x2c44790aaaa30a8f89d3d92c8b26a8da3d7424154fb30e99beab63c5c11ff5c9",
      "kind": "transparent"
    },
    {
      "address": "0xa52dB51E338AA5A3A43a69Ba471DFb133f336FE5",
      "txHash": "0x154116113d2115e272fee9225d2a07f0b33eeaa68bacfe6c365cbdcc55f2579d",
      "kind": "transparent"
    },
    {
      "address": "0x2BAB19bdF57c5a7D519ed0bC62541d6556E70d36",
      "txHash": "0x2a54a49877297b4b81034f24759911d7cf90931b5752230d245e518f340c4ca0",
      "kind": "transparent"
    },
    {
      "address": "0xbd2A4c57800A30a02E70bd019b9bc87B92586286",
      "txHash": "0xbbb6bef944698650e29c7d17f95bd5b51ef2b429edc69e73b5715aea0a0f7809",
      "kind": "transparent"
    },
    {
      "address": "0x7C2D54E8d62B61644330C1D5A899e210361911ad",
      "txHash": "0xfdf39ba0394725e424fbaf9e9bca318f52b89a501f4697737364902ba987c756",
      "kind": "transparent"
    },
    {
      "address": "0x290aa33d29f4d8AEC861611765C15738fcE223ba",
      "txHash": "0x4e9b4b5e1ab872cb94b59ebe0d7af4952df73183d72eae493a46209e23a1490e",
      "kind": "transparent"
    },
    {
      "address": "0xd0E3C015D8fdEd340580B837019ddb85fA5799c4",
      "txHash": "0x4ffcb178e58530bae605466a4f234fff94b1de79d6dae6a1e476ec31dc1eb2d8",
      "kind": "transparent"
    },
    {
      "address": "0x1d8F90Dfd5E468226629d492c352d7C5253b3490",
      "txHash": "0x4e47d3e4216e1429edff7dc06c18535c17ba7fb8d8ecdf2356ea7a1e89eb930c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f092c64d9dae5affe46a326eecdfcc699909c8b6ae62b0e74777d60ca5731763": {
      "address": "0x699d6c885d4D6cae0ad9c673855f2C4Ec9A4B07f",
      "txHash": "0xa2e47ed09138179382e0f3c186ff2468533ca0d9433b944ad0085385fa0f3ae7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatar.sol:29"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatar.sol:31"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3229_storage)",
            "src": "contracts/EPICGatheringAvatar.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatar.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatar.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3241_storage)",
            "src": "contracts/EPICGatheringAvatar.sol:55"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3236_storage)",
            "src": "contracts/EPICGatheringAvatar.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Clan)3229_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3229_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3241_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3241_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3236_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3236_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32cd8a8d5bb4c37624c1c9a03bb038c13ff54de3ce25e718266a772c82063220": {
      "address": "0xbd57385fB308865045c66b5923789546BEf7e022",
      "txHash": "0xe114f76a7e80c69edf118916f2603c0c536df4d9ec144e5a9350d4582134765b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:48"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3192",
            "src": "contracts/EPICGatheringAvatarV1.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3276_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:73"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3288_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:77"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3192": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3276_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3276_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3288_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3288_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3283_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e7930fce557d240709f20fb48c9282daffecbba3e8e6095e7d3c1fecfdf3c39": {
      "address": "0x32244BFABC2eF0785b92115Da3801ca2e7A7905c",
      "txHash": "0xb68ba40fcee03f0ddd3961f9948e1cbf09637e8c43d1bad3b8e545c581e726e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:48"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3192",
            "src": "contracts/EPICGatheringAvatarV1.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3276_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:73"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3288_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:77"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3192": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3276_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3276_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3288_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3288_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3283_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "09b2503faceb0bd27a265c2d3f3b4ac2f030dd7d6a029f0ddfff8917ae9c4ff1": {
      "address": "0xE02b7ccD44DeD1C7E893E3fD9c20B2653f51222C",
      "txHash": "0xfe5b58121fc2fa0c1654ad39aa84e37f519ab2e37713fcfc431f55ff1cba69a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:48"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3192",
            "src": "contracts/EPICGatheringAvatarV1.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3276_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:73"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3288_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:77"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3192": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3276_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3276_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3288_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3288_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3283_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aae1c6005ab1988dc87d1cc09f879b3202ace9b13e2a5cd42a6ad68f0e082bba": {
      "address": "0xA8a4Ca8Ffc46406C776E5b291C2c066fbDdef39e",
      "txHash": "0x7d7c101062d6a4aac61eec20bdc88605453e8f79ebcbfc329f1f0d895fc8bfec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:48"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3192",
            "src": "contracts/EPICGatheringAvatarV1.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3276_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:73"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3288_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:77"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3192": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3276_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3276_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3288_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3288_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3283_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a014fde4eb36992f79545ae0750f33eb5622fd3151dcd089d180a2b5dcc471db": {
      "address": "0x338C365Ab00269cEC88Bff087a121D77Aa54Deb1",
      "txHash": "0x0b71a6856483d3672ed6ff5fa9f6cb317d7c86e3c5b79c3743164f7c99673bf7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV2.sol:48"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)4522",
            "src": "contracts/EPICGatheringAvatarV2.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)4606_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:73"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)4618_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:77"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)4613_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV2.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)4522": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)4606_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV2.Clan)"
          },
          "t_struct(Clan)4606_storage": {
            "label": "struct EPICGatheringAvatarV2.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)4618_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.UserClan)"
          },
          "t_struct(UserClan)4618_storage": {
            "label": "struct EPICGatheringAvatarV2.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)4613_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)4613_storage": {
            "label": "struct EPICGatheringAvatarV2.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "feaa0789bac9eded4bda11f6fae7668590601bb18fb19a2a48b46d781de2aa40": {
      "address": "0xD28Aeed899a88D5368459A6e592BD3F179125152",
      "txHash": "0xc042655dbef9b290a86a4bdf455cb0876b3c7dd912906624583aef078ed9cca2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV3.sol:48"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV3.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV3.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)5892",
            "src": "contracts/EPICGatheringAvatarV3.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)5976_storage)",
            "src": "contracts/EPICGatheringAvatarV3.sol:73"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV3.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV3.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)5988_storage)",
            "src": "contracts/EPICGatheringAvatarV3.sol:77"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)5983_storage)",
            "src": "contracts/EPICGatheringAvatarV3.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV3",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV3.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)5892": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)5976_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV3.Clan)"
          },
          "t_struct(Clan)5976_storage": {
            "label": "struct EPICGatheringAvatarV3.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)5988_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV3.UserClan)"
          },
          "t_struct(UserClan)5988_storage": {
            "label": "struct EPICGatheringAvatarV3.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)5983_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV3.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)5983_storage": {
            "label": "struct EPICGatheringAvatarV3.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b4a7084988a330a5919d81433e06d0b4d180563dab2728ed789db95d1e8980e0": {
      "address": "0xe185fCEB24D4682Ca6e3F8e2886Fa9c06FD02f1c",
      "txHash": "0xae7c1f61711895fe930b0192e8ae1bbf667f84979be98dd13402a3b1dceeab94",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:48"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3192",
            "src": "contracts/EPICGatheringAvatarV1.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3276_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:73"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3288_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:77"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3192": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3276_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3276_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3288_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3288_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3283_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2ec51c17e0a29bd665bc1dcc53af0a15dd2248d6c3a481c3fe5317ce2cfa4526": {
      "address": "0xc8665463A4895683f3ce644E05A94bD7dF05452c",
      "txHash": "0xd838618b4ecd6fcdbf2c421ae98f1e2c49a82dbd889403d8ee1a125b0a6c2ef1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:48"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:51"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3192",
            "src": "contracts/EPICGatheringAvatarV1.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3276_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:73"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3288_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:77"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3192": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3276_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3276_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3288_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3288_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3283_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3283_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f36a5376949020100c0784fb2d494bed96cddbaad1c78c9fce608cde4a6d68ac": {
      "address": "0x43b3a5972BA0Ca9dA4130C0071a32A342cEC4682",
      "txHash": "0x658d9a95ab8f7477353f5329d40b9d838c24db232d0a45f0836fffa8fb57c2de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:50"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3193",
            "src": "contracts/EPICGatheringAvatarV1.sol:54"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3277_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:76"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3289_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:79"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3193": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3277_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3277_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3289_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3289_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3284_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "978c2bef8840deb872a583ac581293f9f889e7a9b8a156bb7fea9ad7940e7f3a": {
      "address": "0x817738935d636FFA97C2357DbE8865ab86c1e878",
      "txHash": "0xe758722746aea5f09e300e881dd0146f13fb6d033545852df14cf1190075c0c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:50"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3193",
            "src": "contracts/EPICGatheringAvatarV1.sol:54"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3277_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:76"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3289_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:79"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3193": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3277_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3277_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3289_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3289_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3284_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "263ba77b681b9045d6ca6951c89bd3c4074946671acafa3efe0ef184287c3221": {
      "address": "0x393784a7A2a384b23202DE3A74157B3d2b96d014",
      "txHash": "0x28285c4f57caae4f5e525f94987fda0409e4c2146ca6b9d352dac87520cc751d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:50"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3193",
            "src": "contracts/EPICGatheringAvatarV1.sol:54"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3277_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:76"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3289_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:79"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3193": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3277_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3277_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3289_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3289_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3284_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fb64e336b1ebb5a448d83d1819cdd9786dbfe16a596a9d3a189dfe424adde32a": {
      "address": "0xE9A5b98C96b5E4825cC25ac803DDBF4B9D6c16b0",
      "txHash": "0x732354cc39a503a035fc67a89432e877d9877d32300064e8fcaae066dae14290",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:50"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3193",
            "src": "contracts/EPICGatheringAvatarV1.sol:54"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3277_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:76"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3289_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:79"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3193": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3277_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3277_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3289_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3289_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3284_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "447129da8854365f662a468bc45ef2bb1114e903b0c34e0818283c0fc5ed01b3": {
      "address": "0x4c4B00b8EfB5dE68a6b26eaB135A3081c1B5b7BD",
      "txHash": "0x9b7679681950dda806608c26da240b5a34f388f7e5ca3bc7cd5ac5e087e9c60b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:50"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3193",
            "src": "contracts/EPICGatheringAvatarV1.sol:54"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3277_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:76"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3289_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:79"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3193": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3277_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3277_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3289_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3289_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3284_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "17ff2fc04cc63a53402de015c02feb9e489a16ac384b54482a1c3e77978d4a08": {
      "address": "0x70746D2717cf953BFa7f805de6e0CB0e94058d70",
      "txHash": "0xefc9164592b048e9485ee672f4258d757c9ae447288ea8102306615ab73a0f70",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV1.sol:49"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:50"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV1.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3193",
            "src": "contracts/EPICGatheringAvatarV1.sol:54"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3277_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:75"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV1.sol:76"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3289_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:78"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)",
            "src": "contracts/EPICGatheringAvatarV1.sol:79"
          },
          {
            "contract": "EPICGatheringAvatarV1",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV1.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3193": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3277_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV1.Clan)"
          },
          "t_struct(Clan)3277_storage": {
            "label": "struct EPICGatheringAvatarV1.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3289_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.UserClan)"
          },
          "t_struct(UserClan)3289_storage": {
            "label": "struct EPICGatheringAvatarV1.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3284_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV1.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3284_storage": {
            "label": "struct EPICGatheringAvatarV1.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "10db8dc9b3e3c9c19b183ff35792cce4fe4c162a930d08edc3fe889c735ecef6": {
      "address": "0x1d4A8Da6968CD58315b9361f9A4ba5702c51DCFF",
      "txHash": "0x4bf042cc8d8684774c1c4a0ce60bb008e7076fe1105d18bf52b9b6a03ce3e4cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV2.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:55"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3418",
            "src": "contracts/EPICGatheringAvatarV2.sol:57"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3511_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:86"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:87"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:89"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3523_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:90"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3518_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:91"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV2.sol:93"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whitelistAccounts",
            "type": "t_mapping(t_address,t_struct(WhitelistStruct)3530_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3418": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3511_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV2.Clan)"
          },
          "t_struct(Clan)3511_storage": {
            "label": "struct EPICGatheringAvatarV2.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3523_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.UserClan)"
          },
          "t_struct(UserClan)3523_storage": {
            "label": "struct EPICGatheringAvatarV2.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3518_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3518_storage": {
            "label": "struct EPICGatheringAvatarV2.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_struct(WhitelistStruct)3530_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.WhitelistStruct)"
          },
          "t_struct(WhitelistStruct)3530_storage": {
            "label": "struct EPICGatheringAvatarV2.WhitelistStruct",
            "members": [
              {
                "label": "isMember",
                "type": "t_bool"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "42f172b9478960d2db0c92cf049838cd93e7c171f758bca3697b463f382732ec": {
      "address": "0xcaF3AFB0710C5617CaC41F4841821bd862484f40",
      "txHash": "0x3f6ec531ef062db19d5b902a62f0b5a11bbe8707d0a07a34618eb8c32f58a692",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV2.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:55"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3418",
            "src": "contracts/EPICGatheringAvatarV2.sol:57"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3511_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:86"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:87"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:89"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3523_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:90"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3518_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:91"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV2.sol:93"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whitelistAccounts",
            "type": "t_mapping(t_address,t_struct(WhitelistStruct)3530_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3418": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3511_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV2.Clan)"
          },
          "t_struct(Clan)3511_storage": {
            "label": "struct EPICGatheringAvatarV2.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3523_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.UserClan)"
          },
          "t_struct(UserClan)3523_storage": {
            "label": "struct EPICGatheringAvatarV2.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3518_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3518_storage": {
            "label": "struct EPICGatheringAvatarV2.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_struct(WhitelistStruct)3530_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.WhitelistStruct)"
          },
          "t_struct(WhitelistStruct)3530_storage": {
            "label": "struct EPICGatheringAvatarV2.WhitelistStruct",
            "members": [
              {
                "label": "isMember",
                "type": "t_bool"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1d3b95e9535cf18e4a9320ba3ea2cf54b2fb4c3bb88d00edddd3dcc10ec5409c": {
      "address": "0x0eaEA8525362A7E1689a37dFC9D2D4dBD0668440",
      "txHash": "0x6687215c47f14cbe61f092e2d4943de10560b227a28109ed21420309f3ed8507",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV2.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:55"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)3512",
            "src": "contracts/EPICGatheringAvatarV2.sol:56"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)3605_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:84"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:85"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:87"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)3617_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:88"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)3612_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:89"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV2.sol:91"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whitelistAccounts",
            "type": "t_mapping(t_address,t_struct(WhitelistStruct)3624_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:92"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whitelistRootHash",
            "type": "t_bytes32",
            "src": "contracts/EPICGatheringAvatarV2.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)3512": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)3605_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV2.Clan)"
          },
          "t_struct(Clan)3605_storage": {
            "label": "struct EPICGatheringAvatarV2.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)3617_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.UserClan)"
          },
          "t_struct(UserClan)3617_storage": {
            "label": "struct EPICGatheringAvatarV2.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)3612_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)3612_storage": {
            "label": "struct EPICGatheringAvatarV2.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_struct(WhitelistStruct)3624_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.WhitelistStruct)"
          },
          "t_struct(WhitelistStruct)3624_storage": {
            "label": "struct EPICGatheringAvatarV2.WhitelistStruct",
            "members": [
              {
                "label": "isMember",
                "type": "t_bool"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "84f49cb1d6d680584f8d7ae4f5a896104011f5230471ef8c94600760cf78fc89": {
      "address": "0x99283C0AEbfd2b0B8ec01936131c32EA060987FD",
      "txHash": "0x83c045645876e841a027e9e46e9a200cc3142c2f87f4fbd02c1c6b44e60bd392",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "recipient",
            "type": "t_address",
            "src": "contracts/EPICGatheringAvatarV2.sol:52"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:53"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "indexClans",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/EPICGatheringAvatarV2.sol:55"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "chainSeed",
            "type": "t_contract(IChainSeed)4903",
            "src": "contracts/EPICGatheringAvatarV2.sol:56"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "clans",
            "type": "t_mapping(t_uint256,t_struct(Clan)4996_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:84"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenLock",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:85"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whiteListAccount",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EPICGatheringAvatarV2.sol:87"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "userClanExist",
            "type": "t_mapping(t_address,t_struct(UserClan)5008_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:88"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "tokenWhitelists",
            "type": "t_mapping(t_address,t_struct(TokenWhitelist)5003_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:89"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "isTokenClanExist",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EPICGatheringAvatarV2.sol:91"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whitelistAccounts",
            "type": "t_mapping(t_address,t_struct(WhitelistStruct)5015_storage)",
            "src": "contracts/EPICGatheringAvatarV2.sol:92"
          },
          {
            "contract": "EPICGatheringAvatarV2",
            "label": "whitelistRootHash",
            "type": "t_bytes32",
            "src": "contracts/EPICGatheringAvatarV2.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IChainSeed)4903": {
            "label": "contract IChainSeed"
          },
          "t_mapping(t_uint256,t_struct(Clan)4996_storage)": {
            "label": "mapping(uint256 => struct EPICGatheringAvatarV2.Clan)"
          },
          "t_struct(Clan)4996_storage": {
            "label": "struct EPICGatheringAvatarV2.Clan",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "isOpen",
                "type": "t_bool"
              },
              {
                "label": "tokenId",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UserClan)5008_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.UserClan)"
          },
          "t_struct(UserClan)5008_storage": {
            "label": "struct EPICGatheringAvatarV2.UserClan",
            "members": [
              {
                "label": "clanId",
                "type": "t_uint256"
              },
              {
                "label": "isExist",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokenWhitelist)5003_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.TokenWhitelist)"
          },
          "t_struct(TokenWhitelist)5003_storage": {
            "label": "struct EPICGatheringAvatarV2.TokenWhitelist",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "whitelistAmount",
                "type": "t_uint256"
              },
              {
                "label": "isUse",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_struct(WhitelistStruct)5015_storage)": {
            "label": "mapping(address => struct EPICGatheringAvatarV2.WhitelistStruct)"
          },
          "t_struct(WhitelistStruct)5015_storage": {
            "label": "struct EPICGatheringAvatarV2.WhitelistStruct",
            "members": [
              {
                "label": "isMember",
                "type": "t_bool"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
